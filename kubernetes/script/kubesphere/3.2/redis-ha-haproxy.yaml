apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"2","meta.helm.sh/release-name":"ks-redis","meta.helm.sh/release-namespace":"kubesphere-system"},"creationTimestamp":"2021-09-29T03:48:57Z","generation":2,"labels":{"app":"redis-ha","app.kubernetes.io/managed-by":"Helm","chart":"redis-ha-3.9.0","heritage":"Helm","release":"ks-redis"},"name":"redis-ha-haproxy","namespace":"kubesphere-system","resourceVersion":"223328","uid":"35e9fc49-f8f2-4518-bfac-a1ef75a695aa"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":1,"selector":{"matchLabels":{"app":"redis-ha-haproxy","release":"ks-redis"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/config":"46138f8b2005948188bc12c93b08a9c6460354af2db98eaa2158bcf1717e82de","prometheus.io/path":"/metrics","prometheus.io/port":"9101","prometheus.io/scrape":"true"},"creationTimestamp":null,"labels":{"app":"redis-ha-haproxy","release":"ks-redis"},"name":"redis-ha-haproxy"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/master","operator":"In","values":[""]}]},"weight":100}]},"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchLabels":{"app":"redis-ha-haproxy","release":"ks-redis"}},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"image":"haproxy:2.0.22-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8888,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":3,"successThreshold":1,"timeoutSeconds":1},"name":"haproxy","ports":[{"containerPort":6379,"name":"redis","protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/usr/local/etc/haproxy","name":"data"},{"mountPath":"/run/haproxy","name":"shared-socket"}]}],"dnsPolicy":"ClusterFirst","initContainers":[{"args":["/readonly/haproxy_init.sh"],"command":["sh"],"image":"haproxy:2.0.22-alpine","imagePullPolicy":"IfNotPresent","name":"config-init","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/readonly","name":"config-volume","readOnly":true},{"mountPath":"/data","name":"data"}]}],"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":0,"runAsNonRoot":false,"runAsUser":0},"serviceAccount":"redis-ha-haproxy","serviceAccountName":"redis-ha-haproxy","terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":60},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":60}],"volumes":[{"configMap":{"defaultMode":420,"name":"redis-ha-configmap"},"name":"config-volume"},{"emptyDir":{},"name":"shared-socket"},{"emptyDir":{},"name":"data"}]}}},"status":{"availableReplicas":3,"conditions":[{"lastTransitionTime":"2021-09-29T03:49:14Z","lastUpdateTime":"2021-09-29T03:49:14Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2021-09-29T03:48:57Z","lastUpdateTime":"2021-09-29T05:23:15Z","message":"ReplicaSet \"redis-ha-haproxy-847f88cf67\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":2,"readyReplicas":3,"replicas":3,"updatedReplicas":3}}
    meta.helm.sh/release-name: ks-redis
    meta.helm.sh/release-namespace: kubesphere-system
  creationTimestamp: "2021-09-29T05:39:05Z"
  generation: 2
  labels:
    app: redis-ha
    app.kubernetes.io/managed-by: Helm
    chart: redis-ha-3.9.0
    heritage: Helm
    release: ks-redis
  name: redis-ha-haproxy
  namespace: kubesphere-system
  resourceVersion: "12910902"
  uid: 05cd5ac4-5688-4655-a587-015258e0e898
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: redis-ha-haproxy
      release: ks-redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 1ee7a49ef4d254e0475df5375135569b1e4b7a22ee4b8d435c9ca901144a4cf7
        prometheus.io/path: /metrics
        prometheus.io/port: "9101"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: redis-ha-haproxy
        release: ks-redis
      name: redis-ha-haproxy
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: redis-ha-haproxy
                release: ks-redis
            topologyKey: kubernetes.io/hostname
      containers:
      - image: haproxy:2.0.22-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        name: haproxy
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/local/etc/haproxy
          name: data
        - mountPath: /run/haproxy
          name: shared-socket
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - /readonly/haproxy_init.sh
        command:
        - sh
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              key: auth
              name: redis-secret
        image: haproxy:2.0.22-alpine
        imagePullPolicy: IfNotPresent
        name: config-init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /readonly
          name: config-volume
          readOnly: true
        - mountPath: /data
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: redis-ha-haproxy
      serviceAccountName: redis-ha-haproxy
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: redis-ha-configmap
        name: config-volume
      - emptyDir: {}
        name: shared-socket
      - emptyDir: {}
        name: data
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2021-10-29T02:59:23Z"
    lastUpdateTime: "2021-10-29T02:59:23Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-09-29T05:39:05Z"
    lastUpdateTime: "2021-11-04T01:09:20Z"
    message: ReplicaSet "redis-ha-haproxy-97bc9cdd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
