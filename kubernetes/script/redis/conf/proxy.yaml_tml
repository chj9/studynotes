---
# Redis-Proxy NodePort
apiVersion: v1
kind: Service
metadata:
  name: redis-proxy
  namespace: redis-system
spec:
  type: NodePort # 对K8S外部提供服务
  ports:
  - name: redis-proxy
    nodePort: 31678   # 对外提供的端口
    port: 7777
    protocol: TCP
    targetPort: 7777
  selector:
    app: redis-proxy
---
# Redis-Proxy Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-proxy
  namespace: redis-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-proxy
  template:
    metadata:
      labels:
        app: redis-proxy
    spec:
      #imagePullSecrets:
      #  - name: local-ware
      initContainers:
      - args:
        - /readonly/init.sh
        command:
        - sh
        image: ableuler/redis-cluster-proxy:latest
        imagePullPolicy: IfNotPresent
        name: config-init
        resources: # 资源分配
          limits: # 容器能使用资源的资源的最大值，设置为0表示使用资源无上限
              cpu: 10m
              memory: 100Mi
          requests: # 容器使用的最小资源需求,判断节点是否满足节点需求
              cpu: 5m
              memory: 50Mi
        volumeMounts:
        - mountPath: /readonly
          name: redis-proxy-conf
          readOnly: true
        - mountPath: /data/
          name: data
      containers:
        - name: redis-proxy
          image: ableuler/redis-cluster-proxy:latest
          imagePullPolicy: IfNotPresent
          command: ["redis-cluster-proxy"]
          args:
            - -c
            - /data/proxy.conf   # 指定启动配置文件
          ports:
            - name: redis-7777
              containerPort: 7777
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data/
          resources: # 资源分配
            limits: # 容器能使用资源的资源的最大值，设置为0表示使用资源无上限
              cpu: 50m
              memory: 200Mi
            requests: # 容器使用的最小资源需求,判断节点是否满足节点需求
              cpu: 10m
              memory: 100Mi
          readinessProbe: # 探测容器内的程序是否健康，它的返回值如果为success
            tcpSocket:
              port: 7777 
            initialDelaySeconds: 30 # 初始化时间
            timeoutSeconds: 15 # 超时时间
            periodSeconds: 10 # 检测间隔
            successThreshold: 1 # 检查成功为1次表示就绪
            failureThreshold: 5 # 检测失败2次表示未就绪
      volumes:   # 挂载proxy配置文件
        - name: redis-proxy-conf
          configMap:
            name: redis-proxy
        - emptyDir: {}
          name: data

